Chapter 1: Values, Types, and Operators.

There are six basic types of values in JavaScript: numbers, strings, Booleans, objects, functions, and undefined values.

ractional numbers are written by using a dot: 9.81
scientific notation by adding 'e': 2.998e8, That is 2.998 × 10^8 = 299,800,000.

% : resto da divisão

Special Numbers
Infinity, -Infinity and 
NaN (not a number): You’ll get this result when you, for example, try to calculate 0 / 0 (zero divided by zero), Infinity - Infinity, or any number of other numeric operations that don’t yield a precise, meaningful result.

Strings
" or '. escaping the character: \. \n or \t (tab) or \".

Unary Operators
typeof takes only one value. Operators that use two values are called binary operators, while those that take one are called unary operators. The minus operator can be used both as a binary operator and as a unary operator: console.log(- (10 - 2)) // → -8

JS precedence: (* / %), (+ -), (&&), (||), (> == and others);

boolean context: 0, NaN and empty strings = false.

Variables: A variable name cannot include punctuation and digits(ex. 2,4), except for the characters $ and _.

Keywords JS:
break case catch class const continue debugger
default delete do else enum export extends false
finally for function if implements import in
instanceof interface let new null package private
protected public return static super switch this
throw true try typeof var void while with yield

Expressões como 0 == false e "" == false retornam true. Para casos assim, onde você não quer qualquer conversão automática de tipos acontecendo, existem dois tipos extras de operadores: === e !==. O primeiro teste se o valor é precisamente igual ao outro, e o segundo testa se ele não é precisamente igual. Então "" === false é falso como experado.




